{
  "course_name": "Microservice Architecture: Practical Implementation - Learn Interactively",
  "course_overview": "Microservices are one of the most important software architecture trends, but it’s one thing to define an architecture and quite another to implement it. \n\nThis course focuses on the nitty-gritty details of real-world implementation. You’ll learn recipes for tech stacks that can be used to implement microservices, as well as the pros and cons of each. \n\nYou’ll start by exploring some fundamental concepts for implementing microservices. Within each concept, you’ll learn about the different technologies used to implement it. The technologies include: Frontend Integration with Edge Side Includes (ESI), asynchronous microservices with Kafka and REST feeds, synchronous microservices with the Netflix stack and Consul, Docker, Kubernetes, Cloud Foundry. Each technology you learn about is described and then demonstrated with real code. \n\nBy the end of this course, you’ll be a microservice pro. Whether you’re a software engineer or an engineering manager, this course will prove useful throughout your career.",
  "course_folder": "microservice architecture practical implementation",
  "course_lessons": [
    "0-introduction",
    "1-structure of the course",
    "2-introduction",
    "3-definition",
    "4-an example",
    "5-scss and microservices",
    "6-challenges",
    "7-benefits variations",
    "8-chapter conclusion",
    "9-introduction",
    "10-frontend monolith or modular",
    "11-options",
    "12-resource oriented client architecture roca",
    "13-benefits of roca",
    "14-challenges",
    "15-benefits",
    "16-variations",
    "17-chapter conclusion",
    "18-introduction",
    "19-overview",
    "20-integration in assurance app",
    "21-other integration methods",
    "22-example",
    "23-variations",
    "24-experiments",
    "25-chapter conclusion",
    "26-introduction",
    "27-example",
    "28-varnish",
    "29-esi in order common",
    "30-variations",
    "31-experiments",
    "32-chapter conclusion",
    "33-introduction",
    "34-definition",
    "35-data replication bounded contexts protocols",
    "36-events",
    "37-event sourcing",
    "38-challenges inconsistencies cap theorem",
    "39-more on inconsistencies",
    "40-other challenges",
    "41-advantages variations",
    "42-chapter conclusion",
    "43-introduction",
    "44-message oriented middleware mom",
    "45-the architecture of kafka",
    "46-more on the architecture of kafka",
    "47-even more on the architecture of kafka",
    "48-events with kafka",
    "49-example introduction",
    "50-example data model",
    "51-example technical structure live app",
    "52-example topics partitions",
    "53-example testing other data formats",
    "54-variations experiments",
    "55-chapter conclusion",
    "56-introduction",
    "57-the atom format",
    "58-atom caching",
    "59-example",
    "60-variations",
    "61-experiments",
    "62-chapter conclusion",
    "63-introduction",
    "64-definition",
    "65-example",
    "66-benefits challenges",
    "67-variations",
    "68-chapter conclusion",
    "69-introduction",
    "70-example",
    "71-eureka service discovery",
    "72-router zuul",
    "73-load balancing ribbon",
    "74-resilience hystrix",
    "75-resilience hystrix implementation",
    "76-variations",
    "77-experiments",
    "78-chapter conclusion",
    "79-introduction",
    "80-example",
    "81-service discovery",
    "82-routing apache httpd",
    "83-consul template",
    "84-consul and spring boot",
    "85-dns and registrator",
    "86-variations",
    "87-experiments",
    "88-chapter conclusion",
    "89-introduction",
    "90-definition",
    "91-variations",
    "92-chapter conclusion",
    "93-introduction",
    "94-the example with kubernetes",
    "95-the example in detail",
    "96-additional kubernetes features",
    "97-variations",
    "98-experiments",
    "99-chapter conclusion",
    "100-introduction",
    "101-paas definition",
    "102-cloud foundry",
    "103-the example with cloud foundry",
    "104-variations experiments",
    "105-serverless",
    "106-chapter conclusion",
    "107-installation of the environment",
    "108-maven commands",
    "109-docker installation and docker commands",
    "110-docker and docker compose commands",
    "111-conclusion"
  ],
  "repo_name": "certifiable-product"
}
